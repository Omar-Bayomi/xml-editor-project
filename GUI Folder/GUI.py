# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt6 UI code generator 6.4.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QFileDialog
from PyQt6.QtWidgets import QApplication, QMainWindow, QLineEdit, QPushButton, QVBoxLayout, QWidget, QLabel
import Compression
from Compression import HuffmanCompression
###########################################################################################
import SocialNetworkDatabase
from SocialNetworkDatabase import SocialNetwork
from GraphVisulization import directed_visuals
###########################################################################################
import tkinter
from tkinter import *
from tkinter import filedialog
from Tree import TreeNode


# import filedialog module
import os
import error_detection
from error_detection import error_check 
import error_correction
from error_correction import error_correction
import minifying
from minifying import Minify
import pertifying
from pertifying import prettyfing
import ConvertToJson
from ConvertToJson import ConvertToJson


root = tkinter.Tk()


import os

class Ui_Form(object):
    
    def __init__(self):
        self.file_path = 'sample.xml'
        self.file_path_compressed = ''
        self.file_path_minified = ''
        self.huffman = None
        self.file_path_corrected = ''
        ###########################################################################################
        self.soical_network=None
        self.post_search = ''
        self.most_active = ''
        self.most_influential = ''
        self.mutual_followers = ''
        self.text_box = ''
        self.text_box2 = ''
        self.text_box3 = ''
        ###########################################################################################


    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(366, 300)
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(240, 7, 110, 291))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.pushButton.setMouseTracking(False)
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.button_clicked_errorCheck)
        self.verticalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.button_clicked_errorCorrect)
        self.verticalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)
        self.pushButton_3.clicked.connect(self.button_clicked_Json)
        self.pushButton_4 = QtWidgets.QPushButton(self.widget)
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout.addWidget(self.pushButton_4)
        self.pushButton_4.clicked.connect(self.button_clicked_compression)
        self.pushButton_5 = QtWidgets.QPushButton(self.widget)
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(self.button_clicked_decompression)
        self.verticalLayout.addWidget(self.pushButton_5)
        self.pushButton_7 = QtWidgets.QPushButton(self.widget)
        self.pushButton_7.setObjectName("pushButton_7")
        self.verticalLayout.addWidget(self.pushButton_7)
        self.pushButton_7.clicked.connect(self.button_clicked_minifying)
        self.pushButton_6 = QtWidgets.QPushButton(self.widget)
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout.addWidget(self.pushButton_6)
        self.pushButton_6.clicked.connect(self.button_clicked_pertifying)

        self.pushButton_8 = QtWidgets.QPushButton(self.widget)
        self.pushButton_8.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.pushButton_8.setObjectName("pushButton_8")
        self.verticalLayout.addWidget(self.pushButton_8)
        self.pushButton_8.clicked.connect(self.browseFiles)
        ###########################################################################################

        self.pushButton_10 = QtWidgets.QPushButton(self.widget)
        self.pushButton_10.setObjectName("pushButton_10")
        self.verticalLayout.addWidget(self.pushButton_10)
        self.pushButton_10.clicked.connect(self.button_clicked_MostInfluencer)

        self.pushButton_11 = QtWidgets.QPushButton(self.widget)
        self.pushButton_11.setObjectName("pushButton_11")
        self.verticalLayout.addWidget(self.pushButton_11)
        self.pushButton_11.clicked.connect(self.button_clicked_MostActive)

        self.pushButton_13= QtWidgets.QPushButton(self.widget)
        self.pushButton_13.setObjectName("pushButton_13")
        self.verticalLayout.addWidget(self.pushButton_13)
        self.pushButton_13.clicked.connect(self.button_clicked_DirectedGraph)

        self.pushButton_9 = QtWidgets.QPushButton(self.widget)
        self.pushButton_9.setObjectName("pushButton_9")
        self.verticalLayout.addWidget(self.pushButton_9)

        self.pushButton_9.clicked.connect(self.button_clicked_PostSearch)
        self.text_box = QtWidgets.QLineEdit()
        self.verticalLayout.addWidget(self.text_box)

        # Connect the PostSearch button to a new function
        self.pushButton_9.clicked.disconnect()
        self.pushButton_9.clicked.connect(self.button_clicked_PostSearch_with_text)

        self.pushButton_12 = QtWidgets.QPushButton(self.widget)
        self.pushButton_12.setObjectName("pushButton_12")
        self.verticalLayout.addWidget(self.pushButton_12)
        self.pushButton_12.clicked.connect(self.button_clicked_MutualFollowers)

        self.text_box2 = QtWidgets.QLineEdit()
        self.verticalLayout.addWidget(self.text_box2)
        self.text_box3 = QtWidgets.QLineEdit()
        self.verticalLayout.addWidget(self.text_box3)
        # Connect the PostSearch button to a new function
        self.pushButton_12.clicked.disconnect()
        self.pushButton_12.clicked.connect(self.button_clicked_MutualFollowers_with_text)

        
        ###########################################################################################
        # self.text_box = QLineEdit()
        # self.button = QPushButton("Submit")

        # # Connect the signal textChanged to the function receive_text
        # self.text_box.textChanged.connect(self.receive_text)

        # # Connect the signal clicked to the function display_text
        # self.button.clicked.connect(self.button_clicked_PostSearch)

        # # Set up the layout
      
        # self.verticalLayout.addWidget(self.pushButton_15)
        


        
        
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.pushButton.setText(_translate("Form", "error check"))
        self.pushButton_2.setText(_translate("Form", "error correct"))
        self.pushButton_3.setText(_translate("Form", "json conversion"))
        self.pushButton_4.setText(_translate("Form", "compress"))
        self.pushButton_5.setText(_translate("Form", "decompress"))
        self.pushButton_7.setText(_translate("Form", "minifying"))
        self.pushButton_6.setText(_translate("Form", "pertifying"))
        self.pushButton_8.setText(_translate("Form", "choose file"))
        ###########################################################################################
        self.pushButton_9.setText(_translate("Form", "Post Search"))
        self.pushButton_10.setText(_translate("Form", "Most Influencer"))
        self.pushButton_11.setText(_translate("Form", "Most Active"))
        self.pushButton_12.setText(_translate("Form", "Mutual Followers"))
        self.pushButton_13.setText(_translate("Form", "Interactive Graph"))
        ###########################################################################################

    def button_clicked_compression(self):
        self.huffman = HuffmanCompression(self.file_path)
        self.file_path_compressed = self.huffman.Compression()

    def button_clicked_errorCheck(self):
        error_check(self.file_path)

    def button_clicked_errorCorrect(self):
        self.file_path_corrected = error_correction(self.file_path)
        #Minify(self.file_path_corrected)



    def button_clicked_minifying(self):
        self.file_path_minified = Minify(self.file_path)


    def button_clicked_pertifying(self):  
        prettyfing(self.file_path_minified)

    
    def button_clicked_decompression(self):
        self.huffman.decompress(self.file_path_compressed)



    def button_clicked_Json(self):
        Root= TreeNode.ParseXml(self.file_path)
        ConvertToJson(Root)
    ###########################################################################################
    def button_clicked_PostSearch(self,searchString):
        self.soical_network = SocialNetwork(self.file_path)
        self.post_search= self.soical_network.post_search(searchString,self.file_path)
        

    def button_clicked_MostInfluencer(self):
        self.soical_network = SocialNetwork(self.file_path)

        self.file_path_mostInfluencer = self.soical_network.most_influencer(self.file_path)
        
    def button_clicked_MutualFollowers(self,user1id, user2id):
        self.soical_network = SocialNetwork(self.file_path)
        self.file_path_mutualFollowers = self.soical_network.mutual_followers(user1id, user2id,self.file_path)
    
    def button_clicked_MostActive(self):
        self.soical_network = SocialNetwork(self.file_path)
        self.file_path_mostActive = self.soical_network.most_active(self.file_path)
        
    
    def button_clicked_DirectedGraph(self,users):
        self.soical_network = SocialNetwork(self.file_path)
        self.file_path_directedGraph = directed_visuals(self.soical_network._SocialNetwork__users)
        
        
    def receive_text(self, text):
        # Store the text from the text box
        self.text = text
    # Define a new function to handle the PostSearch button click
    def button_clicked_PostSearch_with_text(self):
        self.soical_network = SocialNetwork(self.file_path)
        text = self.text_box.text()
        print(text)
        self.post_search= self.soical_network.post_search(text,self.file_path)
        if len(self.post_search) == 0:
            print("No posts found")
        else:
            print(self.post_search[0]) 

    def button_clicked_MutualFollowers_with_text(self):
        self.soical_network = SocialNetwork(self.file_path)
        text2 = self.text_box2.text()
        text3 = self.text_box3.text()

        self.mutual_followers= self.soical_network.mutual_followers(text2,text3,self.file_path)
        print(self.mutual_followers)    

    ###########################################################################################   
    # Function for opening the
    # file explorer window
    def browseFiles(self):
        
        self.file_path = filedialog.askopenfilename(initialdir = "/",
                                        title = "Select a File",
                                        filetypes = (("Text files",
                                                        "*.xml*"),
                                                    ("all files",
                                                        "*.*")))

                                                        
        print(self.file_path)                                                



    
    # Change label contents
        #Form.configure(text="File Opened: "+filename)




if __name__ == "__main__":
    import sys
    window = tkinter.Tk()
    window.wm_attributes('-topmost', 1)
    window.withdraw()   # this supress the tk window
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    root.wm_attributes('-topmost', 1)
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec())
